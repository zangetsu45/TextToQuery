{"ast":null,"code":"var _jsxFileName = \"/home/mayank/Downloads/ssd/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport ChatBox from \"./components/ChatBox\";\nimport ChatInput from \"./components/ChatInput\";\nimport Signup from \"./components/Signup/Signup\";\nimport Login from \"./components/Login/Login\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isSigningUp, setIsSigningUp] = useState(false); // Toggle between Login and Signup\n  const [users, setUsers] = useState([]); // Store registered users\n\n  const generateTable = results => {\n    if (!results || results.length === 0) return \"No results found.\";\n    const headers = Object.keys(results[0]);\n    const rows = results.map(result => {\n      const cells = headers.map(header => `<td>${result[header]}</td>`).join(\"\");\n      return `<tr>${cells}</tr>`;\n    });\n    const table = `\n      <table border=\"1\" style=\"border-collapse: collapse; width: 100%;\">\n        <thead>\n          <tr>${headers.map(header => `<th>${header}</th>`).join(\"\")}</tr>\n        </thead>\n        <tbody>\n          ${rows.join(\"\")}\n        </tbody>\n      </table>\n    `;\n    return table;\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    setMessages([...messages, {\n      sender: \"user\",\n      text: input\n    }]);\n    try {\n      const response = await axios.post(\"http://localhost:5000/textToQuery\", {\n        text: input\n      });\n      if (response.data.error) {\n        throw new Error(response.data.error);\n      }\n      const query = response.data.query;\n      const results = response.data.results;\n      const table = generateTable(results);\n      setMessages(prevMessages => [...prevMessages, {\n        sender: \"bot\",\n        text: `Generated Query:\\n${query}`\n      }, {\n        sender: \"bot\",\n        text: table,\n        isTable: true,\n        results\n      }]);\n      setInput(\"\");\n    } catch (error) {\n      const errorMessage = error.response && error.response.data && error.response.data.error ? error.response.data.error : error.message || \"Something went wrong.\";\n      setMessages(prevMessages => [...prevMessages, {\n        sender: \"bot\",\n        text: `Error: ${errorMessage}`\n      }]);\n    }\n  };\n  const handleSignup = (username, password) => {\n    setUsers(prevUsers => [...prevUsers, {\n      username,\n      password\n    }]);\n    setIsSigningUp(false);\n  };\n  const handleLogin = (username, password) => {\n    const userExists = users.some(user => user.username === username && user.password === password);\n    if (userExists) {\n      setIsLoggedIn(true);\n    } else {\n      alert(\"Invalid credentials. Please try again.\");\n    }\n  };\n  const handleSkipLogin = () => {\n    setIsLoggedIn(true); // Allow access without login\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: !isLoggedIn ? isSigningUp ? /*#__PURE__*/_jsxDEV(Signup, {\n      handleSignup: handleSignup,\n      switchToLogin: () => setIsSigningUp(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      handleLogin: handleLogin,\n      switchToSignup: () => setIsSigningUp(true),\n      skipLogin: handleSkipLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(ChatBox, {\n          messages: messages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          input: input,\n          setInput: setInput,\n          handleSend: handleSend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HUZ0MWAEE7eBJvZQx6EeSXiNB34=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","ChatBox","ChatInput","Signup","Login","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","messages","setMessages","input","setInput","isLoggedIn","setIsLoggedIn","isSigningUp","setIsSigningUp","users","setUsers","generateTable","results","length","headers","Object","keys","rows","map","result","cells","header","join","table","handleSend","trim","sender","text","response","post","data","error","Error","query","prevMessages","isTable","errorMessage","message","handleSignup","username","password","prevUsers","handleLogin","userExists","some","user","alert","handleSkipLogin","className","children","switchToLogin","fileName","_jsxFileName","lineNumber","columnNumber","switchToSignup","skipLogin","_c","$RefreshReg$"],"sources":["/home/mayank/Downloads/ssd/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport ChatBox from \"./components/ChatBox\";\nimport ChatInput from \"./components/ChatInput\";\nimport Signup from \"./components/Signup/Signup\";\nimport Login from \"./components/Login/Login\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isSigningUp, setIsSigningUp] = useState(false); // Toggle between Login and Signup\n  const [users, setUsers] = useState([]); // Store registered users\n\n  const generateTable = (results) => {\n    if (!results || results.length === 0) return \"No results found.\";\n\n    const headers = Object.keys(results[0]);\n\n    const rows = results.map((result) => {\n      const cells = headers.map((header) => `<td>${result[header]}</td>`).join(\"\");\n      return `<tr>${cells}</tr>`;\n    });\n\n    const table = `\n      <table border=\"1\" style=\"border-collapse: collapse; width: 100%;\">\n        <thead>\n          <tr>${headers.map((header) => `<th>${header}</th>`).join(\"\")}</tr>\n        </thead>\n        <tbody>\n          ${rows.join(\"\")}\n        </tbody>\n      </table>\n    `;\n    return table;\n  };\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    setMessages([...messages, { sender: \"user\", text: input }]);\n    try {\n      const response = await axios.post(\"http://localhost:5000/textToQuery\", { text: input });\n      if (response.data.error) {\n        throw new Error(response.data.error);\n      }\n\n      const query = response.data.query;\n      const results = response.data.results;\n      const table = generateTable(results);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { sender: \"bot\", text: `Generated Query:\\n${query}` },\n        {\n          sender: \"bot\",\n          text: table,\n          isTable: true,\n          results,\n        },\n      ]);\n      setInput(\"\");\n    } catch (error) {\n      const errorMessage =\n        error.response && error.response.data && error.response.data.error\n          ? error.response.data.error\n          : error.message || \"Something went wrong.\";\n\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { sender: \"bot\", text: `Error: ${errorMessage}` },\n      ]);\n    }\n  };\n\n  const handleSignup = (username, password) => {\n    setUsers((prevUsers) => [...prevUsers, { username, password }]);\n    setIsSigningUp(false);\n  };\n\n  const handleLogin = (username, password) => {\n    const userExists = users.some((user) => user.username === username && user.password === password);\n    if (userExists) {\n      setIsLoggedIn(true);\n    } else {\n      alert(\"Invalid credentials. Please try again.\");\n    }\n  };\n\n  const handleSkipLogin = () => {\n    setIsLoggedIn(true); // Allow access without login\n  };\n\n  return (\n    <div className=\"app-container\">\n      {!isLoggedIn ? (\n        isSigningUp ? (\n          <Signup handleSignup={handleSignup} switchToLogin={() => setIsSigningUp(false)} />\n        ) : (\n          <Login\n            handleLogin={handleLogin}\n            switchToSignup={() => setIsSigningUp(true)}\n            skipLogin={handleSkipLogin}\n          />\n        )\n      ) : (\n        <>\n          <Navbar />\n          <div className=\"chat-container\">\n            <ChatBox messages={messages} />\n            <ChatInput input={input} setInput={setInput} handleSend={handleSend} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC,MAAMuB,aAAa,GAAIC,OAAO,IAAK;IACjC,IAAI,CAACA,OAAO,IAAIA,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,mBAAmB;IAEhE,MAAMC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAAC,CAAC,CAAC;IAEvC,MAAMK,IAAI,GAAGL,OAAO,CAACM,GAAG,CAAEC,MAAM,IAAK;MACnC,MAAMC,KAAK,GAAGN,OAAO,CAACI,GAAG,CAAEG,MAAM,IAAK,OAAOF,MAAM,CAACE,MAAM,CAAC,OAAO,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;MAC5E,OAAO,OAAOF,KAAK,OAAO;IAC5B,CAAC,CAAC;IAEF,MAAMG,KAAK,GAAG;AAClB;AACA;AACA,gBAAgBT,OAAO,CAACI,GAAG,CAAEG,MAAM,IAAK,OAAOA,MAAM,OAAO,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;AACtE;AACA;AACA,YAAYL,IAAI,CAACK,IAAI,CAAC,EAAE,CAAC;AACzB;AACA;AACA,KAAK;IACD,OAAOC,KAAK;EACd,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACrB,KAAK,CAACsB,IAAI,CAAC,CAAC,EAAE;IACnBvB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEyB,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAExB;IAAM,CAAC,CAAC,CAAC;IAC3D,IAAI;MACF,MAAMyB,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,IAAI,CAAC,mCAAmC,EAAE;QAAEF,IAAI,EAAExB;MAAM,CAAC,CAAC;MACvF,IAAIyB,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;QACvB,MAAM,IAAIC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MACtC;MAEA,MAAME,KAAK,GAAGL,QAAQ,CAACE,IAAI,CAACG,KAAK;MACjC,MAAMrB,OAAO,GAAGgB,QAAQ,CAACE,IAAI,CAAClB,OAAO;MACrC,MAAMW,KAAK,GAAGZ,aAAa,CAACC,OAAO,CAAC;MACpCV,WAAW,CAAEgC,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QAAER,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE,qBAAqBM,KAAK;MAAG,CAAC,EACrD;QACEP,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEJ,KAAK;QACXY,OAAO,EAAE,IAAI;QACbvB;MACF,CAAC,CACF,CAAC;MACFR,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACd,MAAMK,YAAY,GAChBL,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACE,IAAI,IAAIC,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACC,KAAK,GAC9DA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACC,KAAK,GACzBA,KAAK,CAACM,OAAO,IAAI,uBAAuB;MAE9CnC,WAAW,CAAEgC,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QAAER,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE,UAAUS,YAAY;MAAG,CAAC,CAClD,CAAC;IACJ;EACF,CAAC;EAED,MAAME,YAAY,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC3C9B,QAAQ,CAAE+B,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAE;MAAEF,QAAQ;MAAEC;IAAS,CAAC,CAAC,CAAC;IAC/DhC,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMkC,WAAW,GAAGA,CAACH,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,MAAMG,UAAU,GAAGlC,KAAK,CAACmC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACN,QAAQ,KAAKA,QAAQ,IAAIM,IAAI,CAACL,QAAQ,KAAKA,QAAQ,CAAC;IACjG,IAAIG,UAAU,EAAE;MACdrC,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLwC,KAAK,CAAC,wCAAwC,CAAC;IACjD;EACF,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BzC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACEV,OAAA;IAAKoD,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3B,CAAC5C,UAAU,GACVE,WAAW,gBACTX,OAAA,CAACJ,MAAM;MAAC8C,YAAY,EAAEA,YAAa;MAACY,aAAa,EAAEA,CAAA,KAAM1C,cAAc,CAAC,KAAK;IAAE;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAElF1D,OAAA,CAACH,KAAK;MACJiD,WAAW,EAAEA,WAAY;MACzBa,cAAc,EAAEA,CAAA,KAAM/C,cAAc,CAAC,IAAI,CAAE;MAC3CgD,SAAS,EAAET;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF,gBAED1D,OAAA,CAAAE,SAAA;MAAAmD,QAAA,gBACErD,OAAA,CAACP,MAAM;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACV1D,OAAA;QAAKoD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BrD,OAAA,CAACN,OAAO;UAACW,QAAQ,EAAEA;QAAS;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/B1D,OAAA,CAACL,SAAS;UAACY,KAAK,EAAEA,KAAM;UAACC,QAAQ,EAAEA,QAAS;UAACoB,UAAU,EAAEA;QAAW;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE,CAAC;IAAA,eACN;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtD,EAAA,CA3GID,GAAG;AAAA0D,EAAA,GAAH1D,GAAG;AA6GT,eAAeA,GAAG;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}