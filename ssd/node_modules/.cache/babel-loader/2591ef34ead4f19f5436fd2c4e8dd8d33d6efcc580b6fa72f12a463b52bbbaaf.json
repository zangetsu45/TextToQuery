{"ast":null,"code":"var _jsxFileName = \"/home/mayank/Downloads/ssd/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport ChatBox from \"./components/ChatBox\";\nimport ChatInput from \"./components/ChatInput\";\nimport Signup from \"./components/Signup/Signup\";\nimport Login from \"./components/Login/Login\";\nimport QueryHistory from \"./components/QueryHistory\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [employeeDetails, setEmployeeDetails] = useState(null);\n  const [historyUpdate, setHistoryUpdate] = useState(0);\n\n  // Function to fetch employee details based on email\n  const fetchEmployeeDetails = async (email, token) => {\n    if (email && token) {\n      try {\n        const response = await axios.get(`http://localhost:9000/employees/empDetailsByEmail?email=${email}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setEmployeeDetails(response.data);\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"Error fetching employee details:\", error);\n      }\n    }\n  };\n\n  // Check for JWT token on app initialization\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwtToken\");\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        // Optional: Check token expiration\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp && decoded.exp < currentTime) {\n          // Token has expired\n          handleLogout();\n        } else {\n          setIsLoggedIn(true);\n          fetchEmployeeDetails(decoded.email, token);\n        }\n      } catch (error) {\n        console.error(\"Invalid token:\", error);\n        handleLogout();\n      }\n    }\n  }, []);\n  const generateTable = results => {\n    if (!results || results.length === 0) return \"No results found.\";\n    const headers = Object.keys(results[0]);\n    const rows = results.map(result => {\n      const cells = headers.map(header => `<td>${result[header]}</td>`).join(\"\");\n      return `<tr>${cells}</tr>`;\n    });\n    const table = `\n      <table border=\"1\" style=\"border-collapse: collapse; width: 100%;\">\n        <thead>\n          <tr>${headers.map(header => `<th>${header}</th>`).join(\"\")}</tr>\n        </thead>\n        <tbody>\n          ${rows.join(\"\")}\n        </tbody>\n      </table>\n    `;\n    return table;\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    setMessages([...messages, {\n      sender: \"user\",\n      text: input\n    }]);\n    try {\n      const response = await axios.post(\"http://localhost:5000/textToQuery\", {\n        text: input\n      });\n      if (response.data.error) {\n        throw new Error(response.data.error);\n      }\n      const query = response.data.query;\n      const results = response.data.results;\n      const table = generateTable(results);\n      setMessages(prevMessages => [...prevMessages, {\n        sender: \"bot\",\n        text: `Generated Query:\\n${query}`\n      }, {\n        sender: \"bot\",\n        text: table,\n        isTable: true,\n        results\n      }]);\n      const id = employeeDetails === null || employeeDetails === void 0 ? void 0 : employeeDetails.id;\n      const token = localStorage.getItem(\"jwtToken\");\n      const response2 = await axios.post(\"http://localhost:9000/query\", {\n        id: id,\n        query: input\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(response2);\n      setHistoryUpdate(prev => prev + 1);\n      setInput(\"\");\n    } catch (error) {\n      const errorMessage = error.response && error.response.data && error.response.data.error ? error.response.data.error : error.message || \"Something went wrong.\";\n      setMessages(prevMessages => [...prevMessages, {\n        sender: \"bot\",\n        text: `Error: ${errorMessage}`\n      }]);\n      setInput(\"\");\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"jwtToken\");\n    setIsLoggedIn(false);\n    setEmployeeDetails(null);\n    setMessages([]);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            setIsLoggedIn: status => {\n              setIsLoggedIn(status);\n              if (status) {\n                const token = localStorage.getItem(\"jwtToken\");\n                try {\n                  const decoded = jwtDecode(token);\n                  fetchEmployeeDetails(decoded.email, token);\n                } catch (error) {\n                  console.error(\"Invalid token on login:\", error);\n                  handleLogout();\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Navbar, {\n              handleLogout: handleLogout\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-container\",\n              style: {\n                display: \"flex\",\n                height: \"100vh\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: \"0.2\",\n                  borderRight: \"1px solid #ccc\",\n                  overflowY: \"scroll\",\n                  padding: \"10px\"\n                },\n                children: employeeDetails && /*#__PURE__*/_jsxDEV(QueryHistory, {\n                  userId: employeeDetails.id,\n                  update: historyUpdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 43\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: \"0.8\",\n                  display: \"flex\",\n                  flexDirection: \"column\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(ChatBox, {\n                  messages: messages\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n                  input: input,\n                  setInput: setInput,\n                  handleSend: handleSend\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"S/WNWEjZXvYdG6gJEFcwQTUB95M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","Navigate","Navbar","ChatBox","ChatInput","Signup","Login","QueryHistory","axios","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","messages","setMessages","input","setInput","isLoggedIn","setIsLoggedIn","employeeDetails","setEmployeeDetails","historyUpdate","setHistoryUpdate","fetchEmployeeDetails","email","token","response","get","headers","Authorization","data","console","log","error","localStorage","getItem","decoded","currentTime","Date","now","exp","handleLogout","generateTable","results","length","Object","keys","rows","map","result","cells","header","join","table","handleSend","trim","sender","text","post","Error","query","prevMessages","isTable","id","response2","prev","errorMessage","message","removeItem","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","status","style","display","height","flex","borderRight","overflowY","padding","userId","update","flexDirection","_c","$RefreshReg$"],"sources":["/home/mayank/Downloads/ssd/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport ChatBox from \"./components/ChatBox\";\nimport ChatInput from \"./components/ChatInput\";\nimport Signup from \"./components/Signup/Signup\";\nimport Login from \"./components/Login/Login\";\nimport QueryHistory from \"./components/QueryHistory\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [employeeDetails, setEmployeeDetails] = useState(null);\n  const [historyUpdate, setHistoryUpdate] = useState(0);\n\n  // Function to fetch employee details based on email\n  const fetchEmployeeDetails = async (email, token) => {\n    if (email && token) {\n      try {\n        const response = await axios.get(\n          `http://localhost:9000/employees/empDetailsByEmail?email=${email}`,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        setEmployeeDetails(response.data);\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"Error fetching employee details:\", error);\n      }\n    }\n  };\n\n  // Check for JWT token on app initialization\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwtToken\");\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        // Optional: Check token expiration\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp && decoded.exp < currentTime) {\n          // Token has expired\n          handleLogout();\n        } else {\n          setIsLoggedIn(true);\n          fetchEmployeeDetails(decoded.email, token);\n        }\n      } catch (error) {\n        console.error(\"Invalid token:\", error);\n        handleLogout();\n      }\n    }\n  }, []);\n\n  const generateTable = (results) => {\n    if (!results || results.length === 0) return \"No results found.\";\n\n    const headers = Object.keys(results[0]);\n\n    const rows = results.map((result) => {\n      const cells = headers.map((header) => `<td>${result[header]}</td>`).join(\"\");\n      return `<tr>${cells}</tr>`;\n    });\n\n    const table = `\n      <table border=\"1\" style=\"border-collapse: collapse; width: 100%;\">\n        <thead>\n          <tr>${headers.map((header) => `<th>${header}</th>`).join(\"\")}</tr>\n        </thead>\n        <tbody>\n          ${rows.join(\"\")}\n        </tbody>\n      </table>\n    `;\n    return table;\n  };\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    setMessages([...messages, { sender: \"user\", text: input }]);\n    try {\n      const response = await axios.post(\"http://localhost:5000/textToQuery\", { text: input });\n      if (response.data.error) {\n        throw new Error(response.data.error);\n      }\n\n      const query = response.data.query;\n      const results = response.data.results;\n      const table = generateTable(results);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { sender: \"bot\", text: `Generated Query:\\n${query}` },\n        {\n          sender: \"bot\",\n          text: table,\n          isTable: true,\n          results,\n        },\n      ]);\n      const id = employeeDetails?.id;\n      const token = localStorage.getItem(\"jwtToken\");\n      const response2 = await axios.post(\n        \"http://localhost:9000/query\",\n        { id: id, query: input },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      console.log(response2);\n      setHistoryUpdate((prev) => prev + 1);\n      setInput(\"\");\n    } catch (error) {\n      const errorMessage =\n        error.response && error.response.data && error.response.data.error\n          ? error.response.data.error\n          : error.message || \"Something went wrong.\";\n\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { sender: \"bot\", text: `Error: ${errorMessage}` },\n      ]);\n      setInput(\"\");\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"jwtToken\");\n    setIsLoggedIn(false);\n    setEmployeeDetails(null);\n    setMessages([]);\n  };\n\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <Routes>\n          <Route path=\"/signup\" element={<Signup />} />\n          <Route\n            path=\"/login\"\n            element={\n              isLoggedIn ? (\n                <Navigate to=\"/\" />\n              ) : (\n                <Login\n                  setIsLoggedIn={(status) => {\n                    setIsLoggedIn(status);\n                    if (status) {\n                      const token = localStorage.getItem(\"jwtToken\");\n                      try {\n                        const decoded = jwtDecode(token);\n                        fetchEmployeeDetails(decoded.email, token);\n                      } catch (error) {\n                        console.error(\"Invalid token on login:\", error);\n                        handleLogout();\n                      }\n                    }\n                  }}\n                />\n              )\n            }\n          />\n          <Route\n            path=\"/\"\n            element={\n              isLoggedIn ? (\n                <>\n                  <Navbar handleLogout={handleLogout} />\n                  <div className=\"chat-container\" style={{ display: \"flex\", height: \"100vh\" }}>\n                    <div style={{ flex: \"0.2\", borderRight: \"1px solid #ccc\", overflowY: \"scroll\", padding: \"10px\" }}>\n                      {employeeDetails && <QueryHistory userId={employeeDetails.id} update={historyUpdate} />}\n                    </div>\n                    <div style={{ flex: \"0.8\", display: \"flex\", flexDirection: \"column\" }}>\n                      <ChatBox messages={messages} />\n                      <ChatInput input={input} setInput={setInput} handleSend={handleSend} />\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <Navigate to=\"/login\" />\n              )\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}